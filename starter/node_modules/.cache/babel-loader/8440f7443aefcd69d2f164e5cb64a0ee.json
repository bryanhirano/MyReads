{"ast":null,"code":"var _jsxFileName = \"/Users/bryanhirano/Documents/GitHub/nd0191-c1-myreads/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport * as BookAPI from \"./BooksAPI\";\nimport { useState, useEffect, forceUpdate } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Read from \"./Read.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [currentlyReading, setCurrentlyReading] = useState([]);\n  const [wantToRead, setWantToRead] = useState([]);\n  const [read, setRead] = useState([]);\n\n  const deleteAllData = () => {\n    setCurrentlyReading([]);\n    setRead([]);\n    setWantToRead([]);\n  };\n\n  const updateBookShelf = (book, shelf) => {\n    BookAPI.update(book, shelf);\n  };\n\n  useEffect(() => {\n    deleteAllData();\n\n    const getBooks = async () => {\n      const result = await BookAPI.getAll();\n      console.log(\"triggered\");\n    };\n\n    getBooks().then(result => result.map(data => {\n      console.log(data);\n\n      if (data.shelf === \"currentlyReading\") {\n        setCurrentlyReading(currentlyReadin => [...currentlyReadin, data]);\n      } else if (data.shelf === \"wantToRead\") {\n        setWantToRead(wantToRead => [...wantToRead, data]);\n      } else if (data.shelf === \"read\") {\n        setRead(read => [...read, data]);\n      }\n    }));\n    getBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MyReads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this), currentlyReading && /*#__PURE__*/_jsxDEV(Read, {\n        title: \"Currently Reading\",\n        update: updateBookShelf,\n        books: currentlyReading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 40\n      }, this), wantToRead && /*#__PURE__*/_jsxDEV(Read, {\n        title: \"Want to read\",\n        update: updateBookShelf,\n        books: wantToRead\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 36\n      }, this), read && /*#__PURE__*/_jsxDEV(Read, {\n        title: \"Read\",\n        update: updateBookShelf,\n        books: read\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"AMkS0N7gnGKZraEsOjdDJoBlhiM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BookAPI","useState","useEffect","forceUpdate","Routes","Route","Read","App","showSearchPage","setShowSearchpage","currentlyReading","setCurrentlyReading","wantToRead","setWantToRead","read","setRead","deleteAllData","updateBookShelf","book","shelf","update","getBooks","result","getAll","console","log","then","map","data","currentlyReadin"],"sources":["/Users/bryanhirano/Documents/GitHub/nd0191-c1-myreads/starter/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport * as BookAPI from \"./BooksAPI\";\nimport {useState, useEffect, forceUpdate} from \"react\";\nimport {Routes, Route} from \"react-router-dom\"\nimport Read from \"./Read.js\"\n\nfunction App() {\n  const [showSearchPage, setShowSearchpage] = useState(false);\n\n  const [currentlyReading, setCurrentlyReading] = useState([])\n  const [wantToRead, setWantToRead] = useState([])\n  const [read, setRead] = useState([])\n\n  const deleteAllData = () => {\n    setCurrentlyReading([])\n    setRead([])\n    setWantToRead([])\n  }\n\n  const updateBookShelf = (book,shelf) => {\n      BookAPI.update(book,shelf)\n    \n  }\n  \n  \n  useEffect(()=>{\n    \n   \n      deleteAllData()\n   \n      const getBooks = async () => {\n        const result = await BookAPI.getAll()\n        console.log(\"triggered\")\n    \n    }\n    \n    getBooks().then((result) =>  \n        result.map((data) => {\n\n\n\n       console.log(data)\n    \n        if(data.shelf === \"currentlyReading\"){\n          setCurrentlyReading(currentlyReadin => [...currentlyReadin, data])\n\n        }\n        else if(data.shelf === \"wantToRead\"){\n          setWantToRead(wantToRead => [...wantToRead, data])\n        }\n        else if(data.shelf === \"read\"){\n          setRead((read) => [...read, data])\n        }\n\n  }))\n     \n   getBooks();\n  \n  \n  },[])\n  \n\n\n  return (\n   \n        <div className=\"app\">\n          <div className=\"list-books\">\n              <div className=\"list-books-title\">\n                <h1>MyReads</h1>\n              </div>\n                {(currentlyReading) && <Read title=\"Currently Reading\" update={updateBookShelf} books={currentlyReading}></Read>\n                }\n                  {(wantToRead) && <Read title=\"Want to read\" update={updateBookShelf} books={wantToRead}></Read>\n                }\n                  {(read) && <Read title=\"Read\" update={updateBookShelf} books={read}></Read>\n                }\n\n             \n            </div>\n        </div>\n       \n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAO,KAAKA,OAAZ,MAAyB,YAAzB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,WAA7B,QAA+C,OAA/C;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;EAEA,MAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMe,aAAa,GAAG,MAAM;IAC1BL,mBAAmB,CAAC,EAAD,CAAnB;IACAI,OAAO,CAAC,EAAD,CAAP;IACAF,aAAa,CAAC,EAAD,CAAb;EACD,CAJD;;EAMA,MAAMI,eAAe,GAAG,CAACC,IAAD,EAAMC,KAAN,KAAgB;IACpCnB,OAAO,CAACoB,MAAR,CAAeF,IAAf,EAAoBC,KAApB;EAEH,CAHD;;EAMAjB,SAAS,CAAC,MAAI;IAGVc,aAAa;;IAEb,MAAMK,QAAQ,GAAG,YAAY;MAC3B,MAAMC,MAAM,GAAG,MAAMtB,OAAO,CAACuB,MAAR,EAArB;MACAC,OAAO,CAACC,GAAR,CAAY,WAAZ;IAEH,CAJC;;IAMFJ,QAAQ,GAAGK,IAAX,CAAiBJ,MAAD,IACZA,MAAM,CAACK,GAAP,CAAYC,IAAD,IAAU;MAItBJ,OAAO,CAACC,GAAR,CAAYG,IAAZ;;MAEC,IAAGA,IAAI,CAACT,KAAL,KAAe,kBAAlB,EAAqC;QACnCR,mBAAmB,CAACkB,eAAe,IAAI,CAAC,GAAGA,eAAJ,EAAqBD,IAArB,CAApB,CAAnB;MAED,CAHD,MAIK,IAAGA,IAAI,CAACT,KAAL,KAAe,YAAlB,EAA+B;QAClCN,aAAa,CAACD,UAAU,IAAI,CAAC,GAAGA,UAAJ,EAAgBgB,IAAhB,CAAf,CAAb;MACD,CAFI,MAGA,IAAGA,IAAI,CAACT,KAAL,KAAe,MAAlB,EAAyB;QAC5BJ,OAAO,CAAED,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUc,IAAV,CAAX,CAAP;MACD;IAEN,CAjBK,CADJ;IAoBDP,QAAQ;EAGR,CAlCQ,EAkCP,EAlCO,CAAT;EAsCA,oBAEM;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAK,SAAS,EAAC,YAAf;MAAA,wBACI;QAAK,SAAS,EAAC,kBAAf;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADJ,EAIQX,gBAAD,iBAAsB,QAAC,IAAD;QAAM,KAAK,EAAC,mBAAZ;QAAgC,MAAM,EAAEO,eAAxC;QAAyD,KAAK,EAAEP;MAAhE;QAAA;QAAA;QAAA;MAAA,QAJ7B,EAMUE,UAAD,iBAAgB,QAAC,IAAD;QAAM,KAAK,EAAC,cAAZ;QAA2B,MAAM,EAAEK,eAAnC;QAAoD,KAAK,EAAEL;MAA3D;QAAA;QAAA;QAAA;MAAA,QANzB,EAQUE,IAAD,iBAAU,QAAC,IAAD;QAAM,KAAK,EAAC,MAAZ;QAAmB,MAAM,EAAEG,eAA3B;QAA4C,KAAK,EAAEH;MAAnD;QAAA;QAAA;QAAA;MAAA,QARnB;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QAFN;AAmBD;;GA5EQP,G;;KAAAA,G;AA8ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}